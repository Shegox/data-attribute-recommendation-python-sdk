name: CI Workflow
on:
  push:
    branches:
      - main
    tags:
      - rel/**
  pull_request:
    branches:
      - main
env:
  DAR_CLIENT_ID: ${{ secrets.DAR_CLIENT_ID }}
  DAR_CLIENT_SECRET: ${{ secrets.DAR_CLIENT_SECRET }}
  DAR_AUTH_URL: ${{ secrets.DAR_AUTH_URL }}
  DAR_URL: ${{ secrets.DAR_URL }}


jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.14'

      - name: Install dev dependencies
        run: pip install -r requirements-dev.txt

      - name: Run pre-commit linting
        run: pre-commit run --all-files

  tests:
    name: ${{ matrix.os }} Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
         - python-version: '3.10'
           toxenv: 'py310-cov'
           os: ubuntu-latest
         - python-version: '3.11'
           toxenv: 'py311-cov'
           os: ubuntu-latest
         - python-version: 'pypy3.10'
           toxenv: 'pypy3-cov'
           os: ubuntu-latest
         - python-version: '3.10.8'
           toxenv: 'py310-cov'
           os: windows-latest
         - python-version: '3.7.4'
           toxenv: 'py37-cov'
           os: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test dependencies
        run: |
          pip install -r requirements-test.txt
          pip install tox
      - name: Run tests with tox
        run: tox -e ${{ matrix.toxenv }}

  system-tests:
    name: System Tests
    runs-on: windows-latest
    needs: [tests, lint]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/rel/'))
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Python using Chocolatey
        run: |
          choco install python --version 3.10.8
          python -m pip install --upgrade pip
      - name: Add Python to Path
        run: echo "C:\Python310;C:\Python310\Scripts" >> $env:GITHUB_PATH

      - name: Install test dependencies
        run: |
          pip install -r requirements-test.txt
          pip install tox
      - name: Run system tests with tox
        run: tox -e system_tests

      - name: Github Release
        if: startsWith(github.ref, 'refs/tags/rel/')
        uses: softprops/action-gh-release@v2
        with:
          body: "Tagging release ${{ github.ref }}"
          # API key for a machine user specifically created for this task:
          # https://github.com/dar-sdk-machine-user
          token: ${{ secrets.API_KEY }}
          files: system_test_results/traceability.html

  deploy:
    name: Deploy to PyPI
    runs-on: ubuntu-latest
    needs: [system-tests]
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/rel/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Build distributions
        run: python -m build --sdist --wheel

      - name: Deploy release to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
