name: CI Workflow
on:
  push:
    branches:
      - main
    tags:
      - rel/**
  pull_request:
    branches:
      - main

permissions: read-all

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10.14'
      - run: pip install -r requirements-dev.txt
      - run: pre-commit run --all-files

  tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
         - python-version: '3.10'
           toxenv: 'py310-cov'
           os: ubuntu-latest
         - python-version: '3.11'
           toxenv: 'py311-cov'
           os: ubuntu-latest
         - python-version: 'pypy3.10'
           toxenv: 'pypy3-cov'
           os: ubuntu-latest
         - python-version: '3.10.8'
           toxenv: 'py310-cov'
           os: windows-latest
         - python-version: '3.7.4'
           toxenv: 'py37-cov'
           os: macos-13
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install -r requirements-test.txt
      - name: Run tests with tox
        run: tox -e ${{ matrix.toxenv }}
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: pip install build
      - name: Build distributions
        run: python -m build sdist bdist_wheel

  system-tests:
    name: System Tests
    runs-on: windows-latest
    needs: [tests, lint]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/rel/'))
    permissions: 
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.10.8
      - run: pip install -r requirements-test.txt
      
      - name: Run system tests with tox
        run: tox -e system_tests 
        env:
          DAR_CLIENT_ID: ${{ secrets.DAR_CLIENT_ID }}
          DAR_CLIENT_SECRET: ${{ secrets.DAR_CLIENT_SECRET }}
          DAR_AUTH_URL: ${{ secrets.DAR_AUTH_URL }}
          DAR_URL: ${{ secrets.DAR_URL }}

      - name: Create GitHub Release for Tag
        if: startsWith(github.ref, 'refs/tags/rel/')
        uses: softprops/action-gh-release@v2
        with:
          body: "Tagging release ${{ github.ref }}"
          # Uses built in GitHub Access Token
          token: ${{ secrets.GITHUB_TOKEN }}
          files: system_test_results/traceability.html

  deploy:
    name: Deploy to PyPI
    runs-on: ubuntu-latest
    needs: [system-tests]
    if: github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/rel/')
    permissions:
      contents: read
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'



      - name: Build distributions
        run: python setup.py sdist bdist_wheel

      - name: Upload release to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        # Uses OIDC/Workload identies and doesn't require a token
        # Requires setup in PyPi using a trusted publisher: https://docs.pypi.org/trusted-publishers/adding-a-publisher/
